# coding: utf-8

"""
    BtcTurk API 3.0

    White label exchange API documentation.  # noqa: E501

    OpenAPI spec version: 3.0
    Contact: development@btctrader.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UserAllLimitsModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'currency_symbol': 'str',
        'deposit_limit24_hours': 'float',
        'deposit_limit30_days': 'float',
        'withdrawal_limit24_hours': 'float',
        'withdrawal_limit30_days': 'float',
        'calculate': 'bool',
        'remaining24_hours_deposit': 'float',
        'remaining30_days_deposit': 'float',
        'remaining24_hours_withdrawal': 'float',
        'remaining30_days_withdrawal': 'float'
    }

    attribute_map = {
        'currency_symbol': 'currencySymbol',
        'deposit_limit24_hours': 'depositLimit24Hours',
        'deposit_limit30_days': 'depositLimit30Days',
        'withdrawal_limit24_hours': 'withdrawalLimit24Hours',
        'withdrawal_limit30_days': 'withdrawalLimit30Days',
        'calculate': 'calculate',
        'remaining24_hours_deposit': 'remaining24HoursDeposit',
        'remaining30_days_deposit': 'remaining30DaysDeposit',
        'remaining24_hours_withdrawal': 'remaining24HoursWithdrawal',
        'remaining30_days_withdrawal': 'remaining30DaysWithdrawal'
    }

    def __init__(self, currency_symbol=None, deposit_limit24_hours=None, deposit_limit30_days=None, withdrawal_limit24_hours=None, withdrawal_limit30_days=None, calculate=None, remaining24_hours_deposit=None, remaining30_days_deposit=None, remaining24_hours_withdrawal=None, remaining30_days_withdrawal=None):  # noqa: E501
        """UserAllLimitsModel - a model defined in Swagger"""  # noqa: E501
        self._currency_symbol = None
        self._deposit_limit24_hours = None
        self._deposit_limit30_days = None
        self._withdrawal_limit24_hours = None
        self._withdrawal_limit30_days = None
        self._calculate = None
        self._remaining24_hours_deposit = None
        self._remaining30_days_deposit = None
        self._remaining24_hours_withdrawal = None
        self._remaining30_days_withdrawal = None
        self.discriminator = None
        if currency_symbol is not None:
            self.currency_symbol = currency_symbol
        if deposit_limit24_hours is not None:
            self.deposit_limit24_hours = deposit_limit24_hours
        if deposit_limit30_days is not None:
            self.deposit_limit30_days = deposit_limit30_days
        if withdrawal_limit24_hours is not None:
            self.withdrawal_limit24_hours = withdrawal_limit24_hours
        if withdrawal_limit30_days is not None:
            self.withdrawal_limit30_days = withdrawal_limit30_days
        if calculate is not None:
            self.calculate = calculate
        if remaining24_hours_deposit is not None:
            self.remaining24_hours_deposit = remaining24_hours_deposit
        if remaining30_days_deposit is not None:
            self.remaining30_days_deposit = remaining30_days_deposit
        if remaining24_hours_withdrawal is not None:
            self.remaining24_hours_withdrawal = remaining24_hours_withdrawal
        if remaining30_days_withdrawal is not None:
            self.remaining30_days_withdrawal = remaining30_days_withdrawal

    @property
    def currency_symbol(self):
        """Gets the currency_symbol of this UserAllLimitsModel.  # noqa: E501


        :return: The currency_symbol of this UserAllLimitsModel.  # noqa: E501
        :rtype: str
        """
        return self._currency_symbol

    @currency_symbol.setter
    def currency_symbol(self, currency_symbol):
        """Sets the currency_symbol of this UserAllLimitsModel.


        :param currency_symbol: The currency_symbol of this UserAllLimitsModel.  # noqa: E501
        :type: str
        """

        self._currency_symbol = currency_symbol

    @property
    def deposit_limit24_hours(self):
        """Gets the deposit_limit24_hours of this UserAllLimitsModel.  # noqa: E501


        :return: The deposit_limit24_hours of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._deposit_limit24_hours

    @deposit_limit24_hours.setter
    def deposit_limit24_hours(self, deposit_limit24_hours):
        """Sets the deposit_limit24_hours of this UserAllLimitsModel.


        :param deposit_limit24_hours: The deposit_limit24_hours of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._deposit_limit24_hours = deposit_limit24_hours

    @property
    def deposit_limit30_days(self):
        """Gets the deposit_limit30_days of this UserAllLimitsModel.  # noqa: E501


        :return: The deposit_limit30_days of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._deposit_limit30_days

    @deposit_limit30_days.setter
    def deposit_limit30_days(self, deposit_limit30_days):
        """Sets the deposit_limit30_days of this UserAllLimitsModel.


        :param deposit_limit30_days: The deposit_limit30_days of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._deposit_limit30_days = deposit_limit30_days

    @property
    def withdrawal_limit24_hours(self):
        """Gets the withdrawal_limit24_hours of this UserAllLimitsModel.  # noqa: E501


        :return: The withdrawal_limit24_hours of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._withdrawal_limit24_hours

    @withdrawal_limit24_hours.setter
    def withdrawal_limit24_hours(self, withdrawal_limit24_hours):
        """Sets the withdrawal_limit24_hours of this UserAllLimitsModel.


        :param withdrawal_limit24_hours: The withdrawal_limit24_hours of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._withdrawal_limit24_hours = withdrawal_limit24_hours

    @property
    def withdrawal_limit30_days(self):
        """Gets the withdrawal_limit30_days of this UserAllLimitsModel.  # noqa: E501


        :return: The withdrawal_limit30_days of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._withdrawal_limit30_days

    @withdrawal_limit30_days.setter
    def withdrawal_limit30_days(self, withdrawal_limit30_days):
        """Sets the withdrawal_limit30_days of this UserAllLimitsModel.


        :param withdrawal_limit30_days: The withdrawal_limit30_days of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._withdrawal_limit30_days = withdrawal_limit30_days

    @property
    def calculate(self):
        """Gets the calculate of this UserAllLimitsModel.  # noqa: E501


        :return: The calculate of this UserAllLimitsModel.  # noqa: E501
        :rtype: bool
        """
        return self._calculate

    @calculate.setter
    def calculate(self, calculate):
        """Sets the calculate of this UserAllLimitsModel.


        :param calculate: The calculate of this UserAllLimitsModel.  # noqa: E501
        :type: bool
        """

        self._calculate = calculate

    @property
    def remaining24_hours_deposit(self):
        """Gets the remaining24_hours_deposit of this UserAllLimitsModel.  # noqa: E501


        :return: The remaining24_hours_deposit of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._remaining24_hours_deposit

    @remaining24_hours_deposit.setter
    def remaining24_hours_deposit(self, remaining24_hours_deposit):
        """Sets the remaining24_hours_deposit of this UserAllLimitsModel.


        :param remaining24_hours_deposit: The remaining24_hours_deposit of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._remaining24_hours_deposit = remaining24_hours_deposit

    @property
    def remaining30_days_deposit(self):
        """Gets the remaining30_days_deposit of this UserAllLimitsModel.  # noqa: E501


        :return: The remaining30_days_deposit of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._remaining30_days_deposit

    @remaining30_days_deposit.setter
    def remaining30_days_deposit(self, remaining30_days_deposit):
        """Sets the remaining30_days_deposit of this UserAllLimitsModel.


        :param remaining30_days_deposit: The remaining30_days_deposit of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._remaining30_days_deposit = remaining30_days_deposit

    @property
    def remaining24_hours_withdrawal(self):
        """Gets the remaining24_hours_withdrawal of this UserAllLimitsModel.  # noqa: E501


        :return: The remaining24_hours_withdrawal of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._remaining24_hours_withdrawal

    @remaining24_hours_withdrawal.setter
    def remaining24_hours_withdrawal(self, remaining24_hours_withdrawal):
        """Sets the remaining24_hours_withdrawal of this UserAllLimitsModel.


        :param remaining24_hours_withdrawal: The remaining24_hours_withdrawal of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._remaining24_hours_withdrawal = remaining24_hours_withdrawal

    @property
    def remaining30_days_withdrawal(self):
        """Gets the remaining30_days_withdrawal of this UserAllLimitsModel.  # noqa: E501


        :return: The remaining30_days_withdrawal of this UserAllLimitsModel.  # noqa: E501
        :rtype: float
        """
        return self._remaining30_days_withdrawal

    @remaining30_days_withdrawal.setter
    def remaining30_days_withdrawal(self, remaining30_days_withdrawal):
        """Sets the remaining30_days_withdrawal of this UserAllLimitsModel.


        :param remaining30_days_withdrawal: The remaining30_days_withdrawal of this UserAllLimitsModel.  # noqa: E501
        :type: float
        """

        self._remaining30_days_withdrawal = remaining30_days_withdrawal

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UserAllLimitsModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UserAllLimitsModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
