/* 
 * BtcTurk API 3.0
 *
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CreateAlarmRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CreateAlarmRequestTests
    {
        // TODO uncomment below to declare an instance variable for CreateAlarmRequest
        //private CreateAlarmRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CreateAlarmRequest
            //instance = new CreateAlarmRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreateAlarmRequest
        /// </summary>
        [Test]
        public void CreateAlarmRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CreateAlarmRequest
            //Assert.IsInstanceOfType<CreateAlarmRequest> (instance, "variable 'instance' is a CreateAlarmRequest");
        }


        /// <summary>
        /// Test the property 'Pair'
        /// </summary>
        [Test]
        public void PairTest()
        {
            // TODO unit test for the property 'Pair'
        }
        /// <summary>
        /// Test the property 'TriggerValue'
        /// </summary>
        [Test]
        public void TriggerValueTest()
        {
            // TODO unit test for the property 'TriggerValue'
        }
        /// <summary>
        /// Test the property 'AlarmType'
        /// </summary>
        [Test]
        public void AlarmTypeTest()
        {
            // TODO unit test for the property 'AlarmType'
        }
        /// <summary>
        /// Test the property 'Vector'
        /// </summary>
        [Test]
        public void VectorTest()
        {
            // TODO unit test for the property 'Vector'
        }
        /// <summary>
        /// Test the property 'Interval'
        /// </summary>
        [Test]
        public void IntervalTest()
        {
            // TODO unit test for the property 'Interval'
        }
        /// <summary>
        /// Test the property 'RepeatInterval'
        /// </summary>
        [Test]
        public void RepeatIntervalTest()
        {
            // TODO unit test for the property 'RepeatInterval'
        }
        /// <summary>
        /// Test the property 'RepeatMax'
        /// </summary>
        [Test]
        public void RepeatMaxTest()
        {
            // TODO unit test for the property 'RepeatMax'
        }
        /// <summary>
        /// Test the property 'SmsAlert'
        /// </summary>
        [Test]
        public void SmsAlertTest()
        {
            // TODO unit test for the property 'SmsAlert'
        }
        /// <summary>
        /// Test the property 'EmailAlert'
        /// </summary>
        [Test]
        public void EmailAlertTest()
        {
            // TODO unit test for the property 'EmailAlert'
        }
        /// <summary>
        /// Test the property 'PushNotificationAlert'
        /// </summary>
        [Test]
        public void PushNotificationAlertTest()
        {
            // TODO unit test for the property 'PushNotificationAlert'
        }

    }

}
