/* 
 * BtcTurk API 3.0
 *
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AccountApiTests
    {
        private AccountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccountApi
            //Assert.IsInstanceOfType(typeof(AccountApi), instance, "instance is a AccountApi");
        }

        /// <summary>
        /// Test ApiV3AccountAddressPut
        /// </summary>
        [Test]
        public void ApiV3AccountAddressPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccountAddressModel body = null;
            //instance.ApiV3AccountAddressPut(body);
            
        }
        /// <summary>
        /// Test ApiV3AccountBuySellInfoGet
        /// </summary>
        [Test]
        public void ApiV3AccountBuySellInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ApiV3AccountBuySellInfoGet();
            
        }
        /// <summary>
        /// Test ApiV3AccountFeaturesGet
        /// </summary>
        [Test]
        public void ApiV3AccountFeaturesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ApiV3AccountFeaturesGet();
            
        }
        /// <summary>
        /// Test ApiV3AccountLimitsGet
        /// </summary>
        [Test]
        public void ApiV3AccountLimitsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencySymbol = null;
            //var response = instance.ApiV3AccountLimitsGet(currencySymbol);
            //Assert.IsInstanceOf<UserAllLimitsModel> (response, "response is UserAllLimitsModel");
        }
        /// <summary>
        /// Test ApiV3AccountPdpaPost
        /// </summary>
        [Test]
        public void ApiV3AccountPdpaPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //instance.ApiV3AccountPdpaPost(value);
            
        }
        /// <summary>
        /// Test ApiV3AccountSplashScreenLoginPost
        /// </summary>
        [Test]
        public void ApiV3AccountSplashScreenLoginPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSplashScreenLoginRequestModel body = null;
            //instance.ApiV3AccountSplashScreenLoginPost(body);
            
        }
        /// <summary>
        /// Test ApiV3AccountTradeFeeRatesGet
        /// </summary>
        [Test]
        public void ApiV3AccountTradeFeeRatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OrderMethod orderMethod = null;
            //string pairSymbol = null;
            //var response = instance.ApiV3AccountTradeFeeRatesGet(orderMethod, pairSymbol);
            //Assert.IsInstanceOf<UserTradeFeeRateOutputModel> (response, "response is UserTradeFeeRateOutputModel");
        }
    }

}
