/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AnnouncementDetailModel model module.
 * @module model/AnnouncementDetailModel
 * @version 3.0
 */
export class AnnouncementDetailModel {
  /**
   * Constructs a new <code>AnnouncementDetailModel</code>.
   * @alias module:model/AnnouncementDetailModel
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AnnouncementDetailModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AnnouncementDetailModel} obj Optional instance to populate.
   * @return {module:model/AnnouncementDetailModel} The populated <code>AnnouncementDetailModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AnnouncementDetailModel();
      if (data.hasOwnProperty('content'))
        obj.content = ApiClient.convertToType(data['content'], 'String');
      if (data.hasOwnProperty('metaTitle'))
        obj.metaTitle = ApiClient.convertToType(data['metaTitle'], 'String');
      if (data.hasOwnProperty('metaDescription'))
        obj.metaDescription = ApiClient.convertToType(data['metaDescription'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('seoUrl'))
        obj.seoUrl = ApiClient.convertToType(data['seoUrl'], 'String');
      if (data.hasOwnProperty('releaseDate'))
        obj.releaseDate = ApiClient.convertToType(data['releaseDate'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} content
 */
AnnouncementDetailModel.prototype.content = undefined;

/**
 * @member {String} metaTitle
 */
AnnouncementDetailModel.prototype.metaTitle = undefined;

/**
 * @member {String} metaDescription
 */
AnnouncementDetailModel.prototype.metaDescription = undefined;

/**
 * @member {String} title
 */
AnnouncementDetailModel.prototype.title = undefined;

/**
 * @member {String} seoUrl
 */
AnnouncementDetailModel.prototype.seoUrl = undefined;

/**
 * @member {Number} releaseDate
 */
AnnouncementDetailModel.prototype.releaseDate = undefined;

