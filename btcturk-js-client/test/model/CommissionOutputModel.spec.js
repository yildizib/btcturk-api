/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BtcTurkAp30);
  }
}(this, function(expect, BtcTurkAp30) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CommissionOutputModel', function() {
      beforeEach(function() {
        instance = new BtcTurkAp30.CommissionOutputModel();
      });

      it('should create an instance of CommissionOutputModel', function() {
        // TODO: update the code to test CommissionOutputModel
        expect(instance).to.be.a(BtcTurkAp30.CommissionOutputModel);
      });

      it('should have the property paparaCommissions (base name: "paparaCommissions")', function() {
        // TODO: update the code to test the property paparaCommissions
        expect(instance).to.have.property('paparaCommissions');
        // expect(instance.paparaCommissions).to.be(expectedValueLiteral);
      });

      it('should have the property akbankDirektCommissions (base name: "akbankDirektCommissions")', function() {
        // TODO: update the code to test the property akbankDirektCommissions
        expect(instance).to.have.property('akbankDirektCommissions');
        // expect(instance.akbankDirektCommissions).to.be(expectedValueLiteral);
      });

      it('should have the property bankCommissions (base name: "bankCommissions")', function() {
        // TODO: update the code to test the property bankCommissions
        expect(instance).to.have.property('bankCommissions');
        // expect(instance.bankCommissions).to.be(expectedValueLiteral);
      });

      it('should have the property bankCommissionList (base name: "bankCommissionList")', function() {
        // TODO: update the code to test the property bankCommissionList
        expect(instance).to.have.property('bankCommissionList');
        // expect(instance.bankCommissionList).to.be(expectedValueLiteral);
      });

      it('should have the property cryptoCommissions (base name: "cryptoCommissions")', function() {
        // TODO: update the code to test the property cryptoCommissions
        expect(instance).to.have.property('cryptoCommissions');
        // expect(instance.cryptoCommissions).to.be(expectedValueLiteral);
      });

    });
  });

}));
