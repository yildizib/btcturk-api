/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BtcTurkAp30);
  }
}(this, function(expect, BtcTurkAp30) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserAllLimitsModel', function() {
      beforeEach(function() {
        instance = new BtcTurkAp30.UserAllLimitsModel();
      });

      it('should create an instance of UserAllLimitsModel', function() {
        // TODO: update the code to test UserAllLimitsModel
        expect(instance).to.be.a(BtcTurkAp30.UserAllLimitsModel);
      });

      it('should have the property currencySymbol (base name: "currencySymbol")', function() {
        // TODO: update the code to test the property currencySymbol
        expect(instance).to.have.property('currencySymbol');
        // expect(instance.currencySymbol).to.be(expectedValueLiteral);
      });

      it('should have the property depositLimit24Hours (base name: "depositLimit24Hours")', function() {
        // TODO: update the code to test the property depositLimit24Hours
        expect(instance).to.have.property('depositLimit24Hours');
        // expect(instance.depositLimit24Hours).to.be(expectedValueLiteral);
      });

      it('should have the property depositLimit30Days (base name: "depositLimit30Days")', function() {
        // TODO: update the code to test the property depositLimit30Days
        expect(instance).to.have.property('depositLimit30Days');
        // expect(instance.depositLimit30Days).to.be(expectedValueLiteral);
      });

      it('should have the property withdrawalLimit24Hours (base name: "withdrawalLimit24Hours")', function() {
        // TODO: update the code to test the property withdrawalLimit24Hours
        expect(instance).to.have.property('withdrawalLimit24Hours');
        // expect(instance.withdrawalLimit24Hours).to.be(expectedValueLiteral);
      });

      it('should have the property withdrawalLimit30Days (base name: "withdrawalLimit30Days")', function() {
        // TODO: update the code to test the property withdrawalLimit30Days
        expect(instance).to.have.property('withdrawalLimit30Days');
        // expect(instance.withdrawalLimit30Days).to.be(expectedValueLiteral);
      });

      it('should have the property calculate (base name: "calculate")', function() {
        // TODO: update the code to test the property calculate
        expect(instance).to.have.property('calculate');
        // expect(instance.calculate).to.be(expectedValueLiteral);
      });

      it('should have the property remaining24HoursDeposit (base name: "remaining24HoursDeposit")', function() {
        // TODO: update the code to test the property remaining24HoursDeposit
        expect(instance).to.have.property('remaining24HoursDeposit');
        // expect(instance.remaining24HoursDeposit).to.be(expectedValueLiteral);
      });

      it('should have the property remaining30DaysDeposit (base name: "remaining30DaysDeposit")', function() {
        // TODO: update the code to test the property remaining30DaysDeposit
        expect(instance).to.have.property('remaining30DaysDeposit');
        // expect(instance.remaining30DaysDeposit).to.be(expectedValueLiteral);
      });

      it('should have the property remaining24HoursWithdrawal (base name: "remaining24HoursWithdrawal")', function() {
        // TODO: update the code to test the property remaining24HoursWithdrawal
        expect(instance).to.have.property('remaining24HoursWithdrawal');
        // expect(instance.remaining24HoursWithdrawal).to.be(expectedValueLiteral);
      });

      it('should have the property remaining30DaysWithdrawal (base name: "remaining30DaysWithdrawal")', function() {
        // TODO: update the code to test the property remaining30DaysWithdrawal
        expect(instance).to.have.property('remaining30DaysWithdrawal');
        // expect(instance.remaining30DaysWithdrawal).to.be(expectedValueLiteral);
      });

    });
  });

}));
