/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BtcTurkAp30);
  }
}(this, function(expect, BtcTurkAp30) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('WithdrawalCommissionsModel', function() {
      beforeEach(function() {
        instance = new BtcTurkAp30.WithdrawalCommissionsModel();
      });

      it('should create an instance of WithdrawalCommissionsModel', function() {
        // TODO: update the code to test WithdrawalCommissionsModel
        expect(instance).to.be.a(BtcTurkAp30.WithdrawalCommissionsModel);
      });

      it('should have the property cryptoChannelName (base name: "cryptoChannelName")', function() {
        // TODO: update the code to test the property cryptoChannelName
        expect(instance).to.have.property('cryptoChannelName');
        // expect(instance.cryptoChannelName).to.be(expectedValueLiteral);
      });

      it('should have the property commissionType (base name: "commissionType")', function() {
        // TODO: update the code to test the property commissionType
        expect(instance).to.have.property('commissionType');
        // expect(instance.commissionType).to.be(expectedValueLiteral);
      });

      it('should have the property currencyPrecision (base name: "currencyPrecision")', function() {
        // TODO: update the code to test the property currencyPrecision
        expect(instance).to.have.property('currencyPrecision');
        // expect(instance.currencyPrecision).to.be(expectedValueLiteral);
      });

      it('should have the property feeValue (base name: "feeValue")', function() {
        // TODO: update the code to test the property feeValue
        expect(instance).to.have.property('feeValue');
        // expect(instance.feeValue).to.be(expectedValueLiteral);
      });

    });
  });

}));
