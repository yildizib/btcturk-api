/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AkbankDirektCommissionOutputModel;
import io.swagger.client.model.BankCommissionOutputModel;
import io.swagger.client.model.CryptoCommissionOutputModel;
import io.swagger.client.model.PaparaCommissionOutputModel;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CommissionOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class CommissionOutputModel {
  @SerializedName("paparaCommissions")
  private PaparaCommissionOutputModel paparaCommissions = null;

  @SerializedName("akbankDirektCommissions")
  private AkbankDirektCommissionOutputModel akbankDirektCommissions = null;

  @SerializedName("bankCommissions")
  private BankCommissionOutputModel bankCommissions = null;

  @SerializedName("bankCommissionList")
  private List<BankCommissionOutputModel> bankCommissionList = null;

  @SerializedName("cryptoCommissions")
  private List<CryptoCommissionOutputModel> cryptoCommissions = null;

  public CommissionOutputModel paparaCommissions(PaparaCommissionOutputModel paparaCommissions) {
    this.paparaCommissions = paparaCommissions;
    return this;
  }

   /**
   * Get paparaCommissions
   * @return paparaCommissions
  **/
  @Schema(description = "")
  public PaparaCommissionOutputModel getPaparaCommissions() {
    return paparaCommissions;
  }

  public void setPaparaCommissions(PaparaCommissionOutputModel paparaCommissions) {
    this.paparaCommissions = paparaCommissions;
  }

  public CommissionOutputModel akbankDirektCommissions(AkbankDirektCommissionOutputModel akbankDirektCommissions) {
    this.akbankDirektCommissions = akbankDirektCommissions;
    return this;
  }

   /**
   * Get akbankDirektCommissions
   * @return akbankDirektCommissions
  **/
  @Schema(description = "")
  public AkbankDirektCommissionOutputModel getAkbankDirektCommissions() {
    return akbankDirektCommissions;
  }

  public void setAkbankDirektCommissions(AkbankDirektCommissionOutputModel akbankDirektCommissions) {
    this.akbankDirektCommissions = akbankDirektCommissions;
  }

  public CommissionOutputModel bankCommissions(BankCommissionOutputModel bankCommissions) {
    this.bankCommissions = bankCommissions;
    return this;
  }

   /**
   * Get bankCommissions
   * @return bankCommissions
  **/
  @Schema(description = "")
  public BankCommissionOutputModel getBankCommissions() {
    return bankCommissions;
  }

  public void setBankCommissions(BankCommissionOutputModel bankCommissions) {
    this.bankCommissions = bankCommissions;
  }

  public CommissionOutputModel bankCommissionList(List<BankCommissionOutputModel> bankCommissionList) {
    this.bankCommissionList = bankCommissionList;
    return this;
  }

  public CommissionOutputModel addBankCommissionListItem(BankCommissionOutputModel bankCommissionListItem) {
    if (this.bankCommissionList == null) {
      this.bankCommissionList = new ArrayList<BankCommissionOutputModel>();
    }
    this.bankCommissionList.add(bankCommissionListItem);
    return this;
  }

   /**
   * Get bankCommissionList
   * @return bankCommissionList
  **/
  @Schema(description = "")
  public List<BankCommissionOutputModel> getBankCommissionList() {
    return bankCommissionList;
  }

  public void setBankCommissionList(List<BankCommissionOutputModel> bankCommissionList) {
    this.bankCommissionList = bankCommissionList;
  }

  public CommissionOutputModel cryptoCommissions(List<CryptoCommissionOutputModel> cryptoCommissions) {
    this.cryptoCommissions = cryptoCommissions;
    return this;
  }

  public CommissionOutputModel addCryptoCommissionsItem(CryptoCommissionOutputModel cryptoCommissionsItem) {
    if (this.cryptoCommissions == null) {
      this.cryptoCommissions = new ArrayList<CryptoCommissionOutputModel>();
    }
    this.cryptoCommissions.add(cryptoCommissionsItem);
    return this;
  }

   /**
   * Get cryptoCommissions
   * @return cryptoCommissions
  **/
  @Schema(description = "")
  public List<CryptoCommissionOutputModel> getCryptoCommissions() {
    return cryptoCommissions;
  }

  public void setCryptoCommissions(List<CryptoCommissionOutputModel> cryptoCommissions) {
    this.cryptoCommissions = cryptoCommissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommissionOutputModel commissionOutputModel = (CommissionOutputModel) o;
    return Objects.equals(this.paparaCommissions, commissionOutputModel.paparaCommissions) &&
        Objects.equals(this.akbankDirektCommissions, commissionOutputModel.akbankDirektCommissions) &&
        Objects.equals(this.bankCommissions, commissionOutputModel.bankCommissions) &&
        Objects.equals(this.bankCommissionList, commissionOutputModel.bankCommissionList) &&
        Objects.equals(this.cryptoCommissions, commissionOutputModel.cryptoCommissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paparaCommissions, akbankDirektCommissions, bankCommissions, bankCommissionList, cryptoCommissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommissionOutputModel {\n");
    
    sb.append("    paparaCommissions: ").append(toIndentedString(paparaCommissions)).append("\n");
    sb.append("    akbankDirektCommissions: ").append(toIndentedString(akbankDirektCommissions)).append("\n");
    sb.append("    bankCommissions: ").append(toIndentedString(bankCommissions)).append("\n");
    sb.append("    bankCommissionList: ").append(toIndentedString(bankCommissionList)).append("\n");
    sb.append("    cryptoCommissions: ").append(toIndentedString(cryptoCommissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
