/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AlarmInterval;
import io.swagger.client.model.AlarmTypes;
import io.swagger.client.model.AlarmVector;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CreateAlarmRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class CreateAlarmRequest {
  @SerializedName("pair")
  private String pair = null;

  @SerializedName("triggerValue")
  private Double triggerValue = null;

  @SerializedName("alarmType")
  private AlarmTypes alarmType = null;

  @SerializedName("vector")
  private AlarmVector vector = null;

  @SerializedName("interval")
  private AlarmInterval ınterval = null;

  @SerializedName("repeatInterval")
  private Integer repeatInterval = null;

  @SerializedName("repeatMax")
  private Integer repeatMax = null;

  @SerializedName("smsAlert")
  private Boolean smsAlert = null;

  @SerializedName("emailAlert")
  private Boolean emailAlert = null;

  @SerializedName("pushNotificationAlert")
  private Boolean pushNotificationAlert = null;

  public CreateAlarmRequest pair(String pair) {
    this.pair = pair;
    return this;
  }

   /**
   * Get pair
   * @return pair
  **/
  @Schema(description = "")
  public String getPair() {
    return pair;
  }

  public void setPair(String pair) {
    this.pair = pair;
  }

  public CreateAlarmRequest triggerValue(Double triggerValue) {
    this.triggerValue = triggerValue;
    return this;
  }

   /**
   * Get triggerValue
   * @return triggerValue
  **/
  @Schema(description = "")
  public Double getTriggerValue() {
    return triggerValue;
  }

  public void setTriggerValue(Double triggerValue) {
    this.triggerValue = triggerValue;
  }

  public CreateAlarmRequest alarmType(AlarmTypes alarmType) {
    this.alarmType = alarmType;
    return this;
  }

   /**
   * Get alarmType
   * @return alarmType
  **/
  @Schema(description = "")
  public AlarmTypes getAlarmType() {
    return alarmType;
  }

  public void setAlarmType(AlarmTypes alarmType) {
    this.alarmType = alarmType;
  }

  public CreateAlarmRequest vector(AlarmVector vector) {
    this.vector = vector;
    return this;
  }

   /**
   * Get vector
   * @return vector
  **/
  @Schema(description = "")
  public AlarmVector getVector() {
    return vector;
  }

  public void setVector(AlarmVector vector) {
    this.vector = vector;
  }

  public CreateAlarmRequest ınterval(AlarmInterval ınterval) {
    this.ınterval = ınterval;
    return this;
  }

   /**
   * Get ınterval
   * @return ınterval
  **/
  @Schema(description = "")
  public AlarmInterval getInterval() {
    return ınterval;
  }

  public void setInterval(AlarmInterval ınterval) {
    this.ınterval = ınterval;
  }

  public CreateAlarmRequest repeatInterval(Integer repeatInterval) {
    this.repeatInterval = repeatInterval;
    return this;
  }

   /**
   * Get repeatInterval
   * @return repeatInterval
  **/
  @Schema(description = "")
  public Integer getRepeatInterval() {
    return repeatInterval;
  }

  public void setRepeatInterval(Integer repeatInterval) {
    this.repeatInterval = repeatInterval;
  }

  public CreateAlarmRequest repeatMax(Integer repeatMax) {
    this.repeatMax = repeatMax;
    return this;
  }

   /**
   * Get repeatMax
   * @return repeatMax
  **/
  @Schema(description = "")
  public Integer getRepeatMax() {
    return repeatMax;
  }

  public void setRepeatMax(Integer repeatMax) {
    this.repeatMax = repeatMax;
  }

  public CreateAlarmRequest smsAlert(Boolean smsAlert) {
    this.smsAlert = smsAlert;
    return this;
  }

   /**
   * Get smsAlert
   * @return smsAlert
  **/
  @Schema(description = "")
  public Boolean isSmsAlert() {
    return smsAlert;
  }

  public void setSmsAlert(Boolean smsAlert) {
    this.smsAlert = smsAlert;
  }

  public CreateAlarmRequest emailAlert(Boolean emailAlert) {
    this.emailAlert = emailAlert;
    return this;
  }

   /**
   * Get emailAlert
   * @return emailAlert
  **/
  @Schema(description = "")
  public Boolean isEmailAlert() {
    return emailAlert;
  }

  public void setEmailAlert(Boolean emailAlert) {
    this.emailAlert = emailAlert;
  }

  public CreateAlarmRequest pushNotificationAlert(Boolean pushNotificationAlert) {
    this.pushNotificationAlert = pushNotificationAlert;
    return this;
  }

   /**
   * Get pushNotificationAlert
   * @return pushNotificationAlert
  **/
  @Schema(description = "")
  public Boolean isPushNotificationAlert() {
    return pushNotificationAlert;
  }

  public void setPushNotificationAlert(Boolean pushNotificationAlert) {
    this.pushNotificationAlert = pushNotificationAlert;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAlarmRequest createAlarmRequest = (CreateAlarmRequest) o;
    return Objects.equals(this.pair, createAlarmRequest.pair) &&
        Objects.equals(this.triggerValue, createAlarmRequest.triggerValue) &&
        Objects.equals(this.alarmType, createAlarmRequest.alarmType) &&
        Objects.equals(this.vector, createAlarmRequest.vector) &&
        Objects.equals(this.ınterval, createAlarmRequest.ınterval) &&
        Objects.equals(this.repeatInterval, createAlarmRequest.repeatInterval) &&
        Objects.equals(this.repeatMax, createAlarmRequest.repeatMax) &&
        Objects.equals(this.smsAlert, createAlarmRequest.smsAlert) &&
        Objects.equals(this.emailAlert, createAlarmRequest.emailAlert) &&
        Objects.equals(this.pushNotificationAlert, createAlarmRequest.pushNotificationAlert);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pair, triggerValue, alarmType, vector, ınterval, repeatInterval, repeatMax, smsAlert, emailAlert, pushNotificationAlert);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAlarmRequest {\n");
    
    sb.append("    pair: ").append(toIndentedString(pair)).append("\n");
    sb.append("    triggerValue: ").append(toIndentedString(triggerValue)).append("\n");
    sb.append("    alarmType: ").append(toIndentedString(alarmType)).append("\n");
    sb.append("    vector: ").append(toIndentedString(vector)).append("\n");
    sb.append("    ınterval: ").append(toIndentedString(ınterval)).append("\n");
    sb.append("    repeatInterval: ").append(toIndentedString(repeatInterval)).append("\n");
    sb.append("    repeatMax: ").append(toIndentedString(repeatMax)).append("\n");
    sb.append("    smsAlert: ").append(toIndentedString(smsAlert)).append("\n");
    sb.append("    emailAlert: ").append(toIndentedString(emailAlert)).append("\n");
    sb.append("    pushNotificationAlert: ").append(toIndentedString(pushNotificationAlert)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
