/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AkbankDirektLimit;
import io.swagger.client.model.BankLimit;
import io.swagger.client.model.CurrencyLimit;
import io.swagger.client.model.PairLimit;
import io.swagger.client.model.PaparaLimit;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * LimitOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class LimitOutputModel {
  @SerializedName("papara")
  private PaparaLimit papara = null;

  @SerializedName("akbankDirekt")
  private AkbankDirektLimit akbankDirekt = null;

  @SerializedName("bank")
  private BankLimit bank = null;

  @SerializedName("currencies")
  private List<CurrencyLimit> currencies = null;

  @SerializedName("pairs")
  private List<PairLimit> pairs = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  public LimitOutputModel papara(PaparaLimit papara) {
    this.papara = papara;
    return this;
  }

   /**
   * Get papara
   * @return papara
  **/
  @Schema(description = "")
  public PaparaLimit getPapara() {
    return papara;
  }

  public void setPapara(PaparaLimit papara) {
    this.papara = papara;
  }

  public LimitOutputModel akbankDirekt(AkbankDirektLimit akbankDirekt) {
    this.akbankDirekt = akbankDirekt;
    return this;
  }

   /**
   * Get akbankDirekt
   * @return akbankDirekt
  **/
  @Schema(description = "")
  public AkbankDirektLimit getAkbankDirekt() {
    return akbankDirekt;
  }

  public void setAkbankDirekt(AkbankDirektLimit akbankDirekt) {
    this.akbankDirekt = akbankDirekt;
  }

  public LimitOutputModel bank(BankLimit bank) {
    this.bank = bank;
    return this;
  }

   /**
   * Get bank
   * @return bank
  **/
  @Schema(description = "")
  public BankLimit getBank() {
    return bank;
  }

  public void setBank(BankLimit bank) {
    this.bank = bank;
  }

  public LimitOutputModel currencies(List<CurrencyLimit> currencies) {
    this.currencies = currencies;
    return this;
  }

  public LimitOutputModel addCurrenciesItem(CurrencyLimit currenciesItem) {
    if (this.currencies == null) {
      this.currencies = new ArrayList<CurrencyLimit>();
    }
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * Get currencies
   * @return currencies
  **/
  @Schema(description = "")
  public List<CurrencyLimit> getCurrencies() {
    return currencies;
  }

  public void setCurrencies(List<CurrencyLimit> currencies) {
    this.currencies = currencies;
  }

  public LimitOutputModel pairs(List<PairLimit> pairs) {
    this.pairs = pairs;
    return this;
  }

  public LimitOutputModel addPairsItem(PairLimit pairsItem) {
    if (this.pairs == null) {
      this.pairs = new ArrayList<PairLimit>();
    }
    this.pairs.add(pairsItem);
    return this;
  }

   /**
   * Get pairs
   * @return pairs
  **/
  @Schema(description = "")
  public List<PairLimit> getPairs() {
    return pairs;
  }

  public void setPairs(List<PairLimit> pairs) {
    this.pairs = pairs;
  }

  public LimitOutputModel countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @Schema(description = "")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LimitOutputModel limitOutputModel = (LimitOutputModel) o;
    return Objects.equals(this.papara, limitOutputModel.papara) &&
        Objects.equals(this.akbankDirekt, limitOutputModel.akbankDirekt) &&
        Objects.equals(this.bank, limitOutputModel.bank) &&
        Objects.equals(this.currencies, limitOutputModel.currencies) &&
        Objects.equals(this.pairs, limitOutputModel.pairs) &&
        Objects.equals(this.countryCode, limitOutputModel.countryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(papara, akbankDirekt, bank, currencies, pairs, countryCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LimitOutputModel {\n");
    
    sb.append("    papara: ").append(toIndentedString(papara)).append("\n");
    sb.append("    akbankDirekt: ").append(toIndentedString(akbankDirekt)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    pairs: ").append(toIndentedString(pairs)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
