/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.WithdrawalCommissionsModel;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CryptoWithdrawalCommissionsResponseModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class CryptoWithdrawalCommissionsResponseModel {
  @SerializedName("currencyName")
  private String currencyName = null;

  @SerializedName("currencySymbol")
  private String currencySymbol = null;

  @SerializedName("order")
  private Integer order = null;

  @SerializedName("withdrawalCommissionsModels")
  private List<WithdrawalCommissionsModel> withdrawalCommissionsModels = null;

  public CryptoWithdrawalCommissionsResponseModel currencyName(String currencyName) {
    this.currencyName = currencyName;
    return this;
  }

   /**
   * Get currencyName
   * @return currencyName
  **/
  @Schema(description = "")
  public String getCurrencyName() {
    return currencyName;
  }

  public void setCurrencyName(String currencyName) {
    this.currencyName = currencyName;
  }

  public CryptoWithdrawalCommissionsResponseModel currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @Schema(description = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CryptoWithdrawalCommissionsResponseModel order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @Schema(description = "")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }

  public CryptoWithdrawalCommissionsResponseModel withdrawalCommissionsModels(List<WithdrawalCommissionsModel> withdrawalCommissionsModels) {
    this.withdrawalCommissionsModels = withdrawalCommissionsModels;
    return this;
  }

  public CryptoWithdrawalCommissionsResponseModel addWithdrawalCommissionsModelsItem(WithdrawalCommissionsModel withdrawalCommissionsModelsItem) {
    if (this.withdrawalCommissionsModels == null) {
      this.withdrawalCommissionsModels = new ArrayList<WithdrawalCommissionsModel>();
    }
    this.withdrawalCommissionsModels.add(withdrawalCommissionsModelsItem);
    return this;
  }

   /**
   * Get withdrawalCommissionsModels
   * @return withdrawalCommissionsModels
  **/
  @Schema(description = "")
  public List<WithdrawalCommissionsModel> getWithdrawalCommissionsModels() {
    return withdrawalCommissionsModels;
  }

  public void setWithdrawalCommissionsModels(List<WithdrawalCommissionsModel> withdrawalCommissionsModels) {
    this.withdrawalCommissionsModels = withdrawalCommissionsModels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CryptoWithdrawalCommissionsResponseModel cryptoWithdrawalCommissionsResponseModel = (CryptoWithdrawalCommissionsResponseModel) o;
    return Objects.equals(this.currencyName, cryptoWithdrawalCommissionsResponseModel.currencyName) &&
        Objects.equals(this.currencySymbol, cryptoWithdrawalCommissionsResponseModel.currencySymbol) &&
        Objects.equals(this.order, cryptoWithdrawalCommissionsResponseModel.order) &&
        Objects.equals(this.withdrawalCommissionsModels, cryptoWithdrawalCommissionsResponseModel.withdrawalCommissionsModels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyName, currencySymbol, order, withdrawalCommissionsModels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CryptoWithdrawalCommissionsResponseModel {\n");
    
    sb.append("    currencyName: ").append(toIndentedString(currencyName)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    withdrawalCommissionsModels: ").append(toIndentedString(withdrawalCommissionsModels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
