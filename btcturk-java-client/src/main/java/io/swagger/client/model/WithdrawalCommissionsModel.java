/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CommissionType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * WithdrawalCommissionsModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class WithdrawalCommissionsModel {
  @SerializedName("cryptoChannelName")
  private String cryptoChannelName = null;

  @SerializedName("commissionType")
  private CommissionType commissionType = null;

  @SerializedName("currencyPrecision")
  private Integer currencyPrecision = null;

  @SerializedName("feeValue")
  private Double feeValue = null;

  public WithdrawalCommissionsModel cryptoChannelName(String cryptoChannelName) {
    this.cryptoChannelName = cryptoChannelName;
    return this;
  }

   /**
   * Get cryptoChannelName
   * @return cryptoChannelName
  **/
  @Schema(description = "")
  public String getCryptoChannelName() {
    return cryptoChannelName;
  }

  public void setCryptoChannelName(String cryptoChannelName) {
    this.cryptoChannelName = cryptoChannelName;
  }

  public WithdrawalCommissionsModel commissionType(CommissionType commissionType) {
    this.commissionType = commissionType;
    return this;
  }

   /**
   * Get commissionType
   * @return commissionType
  **/
  @Schema(description = "")
  public CommissionType getCommissionType() {
    return commissionType;
  }

  public void setCommissionType(CommissionType commissionType) {
    this.commissionType = commissionType;
  }

  public WithdrawalCommissionsModel currencyPrecision(Integer currencyPrecision) {
    this.currencyPrecision = currencyPrecision;
    return this;
  }

   /**
   * Get currencyPrecision
   * @return currencyPrecision
  **/
  @Schema(description = "")
  public Integer getCurrencyPrecision() {
    return currencyPrecision;
  }

  public void setCurrencyPrecision(Integer currencyPrecision) {
    this.currencyPrecision = currencyPrecision;
  }

  public WithdrawalCommissionsModel feeValue(Double feeValue) {
    this.feeValue = feeValue;
    return this;
  }

   /**
   * Get feeValue
   * @return feeValue
  **/
  @Schema(description = "")
  public Double getFeeValue() {
    return feeValue;
  }

  public void setFeeValue(Double feeValue) {
    this.feeValue = feeValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WithdrawalCommissionsModel withdrawalCommissionsModel = (WithdrawalCommissionsModel) o;
    return Objects.equals(this.cryptoChannelName, withdrawalCommissionsModel.cryptoChannelName) &&
        Objects.equals(this.commissionType, withdrawalCommissionsModel.commissionType) &&
        Objects.equals(this.currencyPrecision, withdrawalCommissionsModel.currencyPrecision) &&
        Objects.equals(this.feeValue, withdrawalCommissionsModel.feeValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cryptoChannelName, commissionType, currencyPrecision, feeValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WithdrawalCommissionsModel {\n");
    
    sb.append("    cryptoChannelName: ").append(toIndentedString(cryptoChannelName)).append("\n");
    sb.append("    commissionType: ").append(toIndentedString(commissionType)).append("\n");
    sb.append("    currencyPrecision: ").append(toIndentedString(currencyPrecision)).append("\n");
    sb.append("    feeValue: ").append(toIndentedString(feeValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
