/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LimitType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LevelLimitValues
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class LevelLimitValues {
  @SerializedName("depositLimit24Hours")
  private Double depositLimit24Hours = null;

  @SerializedName("depositLimit24HoursType")
  private LimitType depositLimit24HoursType = null;

  @SerializedName("depositLimit30Days")
  private Double depositLimit30Days = null;

  @SerializedName("depositLimit30DaysType")
  private LimitType depositLimit30DaysType = null;

  @SerializedName("withdrawalLimit24Hours")
  private Double withdrawalLimit24Hours = null;

  @SerializedName("withdrawalLimit24HoursType")
  private LimitType withdrawalLimit24HoursType = null;

  @SerializedName("withdrawalLimit30Days")
  private Double withdrawalLimit30Days = null;

  @SerializedName("withdrawalLimit30DaysType")
  private LimitType withdrawalLimit30DaysType = null;

  public LevelLimitValues depositLimit24Hours(Double depositLimit24Hours) {
    this.depositLimit24Hours = depositLimit24Hours;
    return this;
  }

   /**
   * Get depositLimit24Hours
   * @return depositLimit24Hours
  **/
  @Schema(description = "")
  public Double getDepositLimit24Hours() {
    return depositLimit24Hours;
  }

  public void setDepositLimit24Hours(Double depositLimit24Hours) {
    this.depositLimit24Hours = depositLimit24Hours;
  }

  public LevelLimitValues depositLimit24HoursType(LimitType depositLimit24HoursType) {
    this.depositLimit24HoursType = depositLimit24HoursType;
    return this;
  }

   /**
   * Get depositLimit24HoursType
   * @return depositLimit24HoursType
  **/
  @Schema(description = "")
  public LimitType getDepositLimit24HoursType() {
    return depositLimit24HoursType;
  }

  public void setDepositLimit24HoursType(LimitType depositLimit24HoursType) {
    this.depositLimit24HoursType = depositLimit24HoursType;
  }

  public LevelLimitValues depositLimit30Days(Double depositLimit30Days) {
    this.depositLimit30Days = depositLimit30Days;
    return this;
  }

   /**
   * Get depositLimit30Days
   * @return depositLimit30Days
  **/
  @Schema(description = "")
  public Double getDepositLimit30Days() {
    return depositLimit30Days;
  }

  public void setDepositLimit30Days(Double depositLimit30Days) {
    this.depositLimit30Days = depositLimit30Days;
  }

  public LevelLimitValues depositLimit30DaysType(LimitType depositLimit30DaysType) {
    this.depositLimit30DaysType = depositLimit30DaysType;
    return this;
  }

   /**
   * Get depositLimit30DaysType
   * @return depositLimit30DaysType
  **/
  @Schema(description = "")
  public LimitType getDepositLimit30DaysType() {
    return depositLimit30DaysType;
  }

  public void setDepositLimit30DaysType(LimitType depositLimit30DaysType) {
    this.depositLimit30DaysType = depositLimit30DaysType;
  }

  public LevelLimitValues withdrawalLimit24Hours(Double withdrawalLimit24Hours) {
    this.withdrawalLimit24Hours = withdrawalLimit24Hours;
    return this;
  }

   /**
   * Get withdrawalLimit24Hours
   * @return withdrawalLimit24Hours
  **/
  @Schema(description = "")
  public Double getWithdrawalLimit24Hours() {
    return withdrawalLimit24Hours;
  }

  public void setWithdrawalLimit24Hours(Double withdrawalLimit24Hours) {
    this.withdrawalLimit24Hours = withdrawalLimit24Hours;
  }

  public LevelLimitValues withdrawalLimit24HoursType(LimitType withdrawalLimit24HoursType) {
    this.withdrawalLimit24HoursType = withdrawalLimit24HoursType;
    return this;
  }

   /**
   * Get withdrawalLimit24HoursType
   * @return withdrawalLimit24HoursType
  **/
  @Schema(description = "")
  public LimitType getWithdrawalLimit24HoursType() {
    return withdrawalLimit24HoursType;
  }

  public void setWithdrawalLimit24HoursType(LimitType withdrawalLimit24HoursType) {
    this.withdrawalLimit24HoursType = withdrawalLimit24HoursType;
  }

  public LevelLimitValues withdrawalLimit30Days(Double withdrawalLimit30Days) {
    this.withdrawalLimit30Days = withdrawalLimit30Days;
    return this;
  }

   /**
   * Get withdrawalLimit30Days
   * @return withdrawalLimit30Days
  **/
  @Schema(description = "")
  public Double getWithdrawalLimit30Days() {
    return withdrawalLimit30Days;
  }

  public void setWithdrawalLimit30Days(Double withdrawalLimit30Days) {
    this.withdrawalLimit30Days = withdrawalLimit30Days;
  }

  public LevelLimitValues withdrawalLimit30DaysType(LimitType withdrawalLimit30DaysType) {
    this.withdrawalLimit30DaysType = withdrawalLimit30DaysType;
    return this;
  }

   /**
   * Get withdrawalLimit30DaysType
   * @return withdrawalLimit30DaysType
  **/
  @Schema(description = "")
  public LimitType getWithdrawalLimit30DaysType() {
    return withdrawalLimit30DaysType;
  }

  public void setWithdrawalLimit30DaysType(LimitType withdrawalLimit30DaysType) {
    this.withdrawalLimit30DaysType = withdrawalLimit30DaysType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LevelLimitValues levelLimitValues = (LevelLimitValues) o;
    return Objects.equals(this.depositLimit24Hours, levelLimitValues.depositLimit24Hours) &&
        Objects.equals(this.depositLimit24HoursType, levelLimitValues.depositLimit24HoursType) &&
        Objects.equals(this.depositLimit30Days, levelLimitValues.depositLimit30Days) &&
        Objects.equals(this.depositLimit30DaysType, levelLimitValues.depositLimit30DaysType) &&
        Objects.equals(this.withdrawalLimit24Hours, levelLimitValues.withdrawalLimit24Hours) &&
        Objects.equals(this.withdrawalLimit24HoursType, levelLimitValues.withdrawalLimit24HoursType) &&
        Objects.equals(this.withdrawalLimit30Days, levelLimitValues.withdrawalLimit30Days) &&
        Objects.equals(this.withdrawalLimit30DaysType, levelLimitValues.withdrawalLimit30DaysType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(depositLimit24Hours, depositLimit24HoursType, depositLimit30Days, depositLimit30DaysType, withdrawalLimit24Hours, withdrawalLimit24HoursType, withdrawalLimit30Days, withdrawalLimit30DaysType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LevelLimitValues {\n");
    
    sb.append("    depositLimit24Hours: ").append(toIndentedString(depositLimit24Hours)).append("\n");
    sb.append("    depositLimit24HoursType: ").append(toIndentedString(depositLimit24HoursType)).append("\n");
    sb.append("    depositLimit30Days: ").append(toIndentedString(depositLimit30Days)).append("\n");
    sb.append("    depositLimit30DaysType: ").append(toIndentedString(depositLimit30DaysType)).append("\n");
    sb.append("    withdrawalLimit24Hours: ").append(toIndentedString(withdrawalLimit24Hours)).append("\n");
    sb.append("    withdrawalLimit24HoursType: ").append(toIndentedString(withdrawalLimit24HoursType)).append("\n");
    sb.append("    withdrawalLimit30Days: ").append(toIndentedString(withdrawalLimit30Days)).append("\n");
    sb.append("    withdrawalLimit30DaysType: ").append(toIndentedString(withdrawalLimit30DaysType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
