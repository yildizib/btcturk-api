/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PaparaCommissionOutputModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class PaparaCommissionOutputModel {
  @SerializedName("depositFee")
  private Double depositFee = null;

  @SerializedName("depositMaxFee")
  private Integer depositMaxFee = null;

  @SerializedName("depositTax")
  private Double depositTax = null;

  @SerializedName("withdrawalFee")
  private Double withdrawalFee = null;

  @SerializedName("withdrawalMaxFee")
  private Integer withdrawalMaxFee = null;

  @SerializedName("withdrawalTax")
  private Double withdrawalTax = null;

  @SerializedName("minimumWithdrawalPerTransaction")
  private Double minimumWithdrawalPerTransaction = null;

  public PaparaCommissionOutputModel depositFee(Double depositFee) {
    this.depositFee = depositFee;
    return this;
  }

   /**
   * Get depositFee
   * @return depositFee
  **/
  @Schema(description = "")
  public Double getDepositFee() {
    return depositFee;
  }

  public void setDepositFee(Double depositFee) {
    this.depositFee = depositFee;
  }

  public PaparaCommissionOutputModel depositMaxFee(Integer depositMaxFee) {
    this.depositMaxFee = depositMaxFee;
    return this;
  }

   /**
   * Get depositMaxFee
   * @return depositMaxFee
  **/
  @Schema(description = "")
  public Integer getDepositMaxFee() {
    return depositMaxFee;
  }

  public void setDepositMaxFee(Integer depositMaxFee) {
    this.depositMaxFee = depositMaxFee;
  }

  public PaparaCommissionOutputModel depositTax(Double depositTax) {
    this.depositTax = depositTax;
    return this;
  }

   /**
   * Get depositTax
   * @return depositTax
  **/
  @Schema(description = "")
  public Double getDepositTax() {
    return depositTax;
  }

  public void setDepositTax(Double depositTax) {
    this.depositTax = depositTax;
  }

  public PaparaCommissionOutputModel withdrawalFee(Double withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
    return this;
  }

   /**
   * Get withdrawalFee
   * @return withdrawalFee
  **/
  @Schema(description = "")
  public Double getWithdrawalFee() {
    return withdrawalFee;
  }

  public void setWithdrawalFee(Double withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
  }

  public PaparaCommissionOutputModel withdrawalMaxFee(Integer withdrawalMaxFee) {
    this.withdrawalMaxFee = withdrawalMaxFee;
    return this;
  }

   /**
   * Get withdrawalMaxFee
   * @return withdrawalMaxFee
  **/
  @Schema(description = "")
  public Integer getWithdrawalMaxFee() {
    return withdrawalMaxFee;
  }

  public void setWithdrawalMaxFee(Integer withdrawalMaxFee) {
    this.withdrawalMaxFee = withdrawalMaxFee;
  }

  public PaparaCommissionOutputModel withdrawalTax(Double withdrawalTax) {
    this.withdrawalTax = withdrawalTax;
    return this;
  }

   /**
   * Get withdrawalTax
   * @return withdrawalTax
  **/
  @Schema(description = "")
  public Double getWithdrawalTax() {
    return withdrawalTax;
  }

  public void setWithdrawalTax(Double withdrawalTax) {
    this.withdrawalTax = withdrawalTax;
  }

  public PaparaCommissionOutputModel minimumWithdrawalPerTransaction(Double minimumWithdrawalPerTransaction) {
    this.minimumWithdrawalPerTransaction = minimumWithdrawalPerTransaction;
    return this;
  }

   /**
   * Get minimumWithdrawalPerTransaction
   * @return minimumWithdrawalPerTransaction
  **/
  @Schema(description = "")
  public Double getMinimumWithdrawalPerTransaction() {
    return minimumWithdrawalPerTransaction;
  }

  public void setMinimumWithdrawalPerTransaction(Double minimumWithdrawalPerTransaction) {
    this.minimumWithdrawalPerTransaction = minimumWithdrawalPerTransaction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaparaCommissionOutputModel paparaCommissionOutputModel = (PaparaCommissionOutputModel) o;
    return Objects.equals(this.depositFee, paparaCommissionOutputModel.depositFee) &&
        Objects.equals(this.depositMaxFee, paparaCommissionOutputModel.depositMaxFee) &&
        Objects.equals(this.depositTax, paparaCommissionOutputModel.depositTax) &&
        Objects.equals(this.withdrawalFee, paparaCommissionOutputModel.withdrawalFee) &&
        Objects.equals(this.withdrawalMaxFee, paparaCommissionOutputModel.withdrawalMaxFee) &&
        Objects.equals(this.withdrawalTax, paparaCommissionOutputModel.withdrawalTax) &&
        Objects.equals(this.minimumWithdrawalPerTransaction, paparaCommissionOutputModel.minimumWithdrawalPerTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(depositFee, depositMaxFee, depositTax, withdrawalFee, withdrawalMaxFee, withdrawalTax, minimumWithdrawalPerTransaction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaparaCommissionOutputModel {\n");
    
    sb.append("    depositFee: ").append(toIndentedString(depositFee)).append("\n");
    sb.append("    depositMaxFee: ").append(toIndentedString(depositMaxFee)).append("\n");
    sb.append("    depositTax: ").append(toIndentedString(depositTax)).append("\n");
    sb.append("    withdrawalFee: ").append(toIndentedString(withdrawalFee)).append("\n");
    sb.append("    withdrawalMaxFee: ").append(toIndentedString(withdrawalMaxFee)).append("\n");
    sb.append("    withdrawalTax: ").append(toIndentedString(withdrawalTax)).append("\n");
    sb.append("    minimumWithdrawalPerTransaction: ").append(toIndentedString(minimumWithdrawalPerTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
