/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SystemNotificationModel;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SystemNotificationModelIPagedList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class SystemNotificationModelIPagedList {
  @SerializedName("indexFrom")
  private Integer ındexFrom = null;

  @SerializedName("pageIndex")
  private Integer pageIndex = null;

  @SerializedName("pageSize")
  private Integer pageSize = null;

  @SerializedName("totalCount")
  private Integer totalCount = null;

  @SerializedName("totalPages")
  private Integer totalPages = null;

  @SerializedName("items")
  private List<SystemNotificationModel> ıtems = null;

  @SerializedName("hasPreviousPage")
  private Boolean hasPreviousPage = null;

  @SerializedName("hasNextPage")
  private Boolean hasNextPage = null;

   /**
   * Get ındexFrom
   * @return ındexFrom
  **/
  @Schema(description = "")
  public Integer getIndexFrom() {
    return ındexFrom;
  }

   /**
   * Get pageIndex
   * @return pageIndex
  **/
  @Schema(description = "")
  public Integer getPageIndex() {
    return pageIndex;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(description = "")
  public Integer getTotalCount() {
    return totalCount;
  }

   /**
   * Get totalPages
   * @return totalPages
  **/
  @Schema(description = "")
  public Integer getTotalPages() {
    return totalPages;
  }

   /**
   * Get ıtems
   * @return ıtems
  **/
  @Schema(description = "")
  public List<SystemNotificationModel> getItems() {
    return ıtems;
  }

   /**
   * Get hasPreviousPage
   * @return hasPreviousPage
  **/
  @Schema(description = "")
  public Boolean isHasPreviousPage() {
    return hasPreviousPage;
  }

   /**
   * Get hasNextPage
   * @return hasNextPage
  **/
  @Schema(description = "")
  public Boolean isHasNextPage() {
    return hasNextPage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemNotificationModelIPagedList systemNotificationModelIPagedList = (SystemNotificationModelIPagedList) o;
    return Objects.equals(this.ındexFrom, systemNotificationModelIPagedList.ındexFrom) &&
        Objects.equals(this.pageIndex, systemNotificationModelIPagedList.pageIndex) &&
        Objects.equals(this.pageSize, systemNotificationModelIPagedList.pageSize) &&
        Objects.equals(this.totalCount, systemNotificationModelIPagedList.totalCount) &&
        Objects.equals(this.totalPages, systemNotificationModelIPagedList.totalPages) &&
        Objects.equals(this.ıtems, systemNotificationModelIPagedList.ıtems) &&
        Objects.equals(this.hasPreviousPage, systemNotificationModelIPagedList.hasPreviousPage) &&
        Objects.equals(this.hasNextPage, systemNotificationModelIPagedList.hasNextPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ındexFrom, pageIndex, pageSize, totalCount, totalPages, ıtems, hasPreviousPage, hasNextPage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemNotificationModelIPagedList {\n");
    
    sb.append("    ındexFrom: ").append(toIndentedString(ındexFrom)).append("\n");
    sb.append("    pageIndex: ").append(toIndentedString(pageIndex)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    ıtems: ").append(toIndentedString(ıtems)).append("\n");
    sb.append("    hasPreviousPage: ").append(toIndentedString(hasPreviousPage)).append("\n");
    sb.append("    hasNextPage: ").append(toIndentedString(hasNextPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
