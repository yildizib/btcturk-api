/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UserAllLimitsModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class UserAllLimitsModel {
  @SerializedName("currencySymbol")
  private String currencySymbol = null;

  @SerializedName("depositLimit24Hours")
  private Double depositLimit24Hours = null;

  @SerializedName("depositLimit30Days")
  private Double depositLimit30Days = null;

  @SerializedName("withdrawalLimit24Hours")
  private Double withdrawalLimit24Hours = null;

  @SerializedName("withdrawalLimit30Days")
  private Double withdrawalLimit30Days = null;

  @SerializedName("calculate")
  private Boolean calculate = null;

  @SerializedName("remaining24HoursDeposit")
  private Double remaining24HoursDeposit = null;

  @SerializedName("remaining30DaysDeposit")
  private Double remaining30DaysDeposit = null;

  @SerializedName("remaining24HoursWithdrawal")
  private Double remaining24HoursWithdrawal = null;

  @SerializedName("remaining30DaysWithdrawal")
  private Double remaining30DaysWithdrawal = null;

  public UserAllLimitsModel currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @Schema(description = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public UserAllLimitsModel depositLimit24Hours(Double depositLimit24Hours) {
    this.depositLimit24Hours = depositLimit24Hours;
    return this;
  }

   /**
   * Get depositLimit24Hours
   * @return depositLimit24Hours
  **/
  @Schema(description = "")
  public Double getDepositLimit24Hours() {
    return depositLimit24Hours;
  }

  public void setDepositLimit24Hours(Double depositLimit24Hours) {
    this.depositLimit24Hours = depositLimit24Hours;
  }

  public UserAllLimitsModel depositLimit30Days(Double depositLimit30Days) {
    this.depositLimit30Days = depositLimit30Days;
    return this;
  }

   /**
   * Get depositLimit30Days
   * @return depositLimit30Days
  **/
  @Schema(description = "")
  public Double getDepositLimit30Days() {
    return depositLimit30Days;
  }

  public void setDepositLimit30Days(Double depositLimit30Days) {
    this.depositLimit30Days = depositLimit30Days;
  }

  public UserAllLimitsModel withdrawalLimit24Hours(Double withdrawalLimit24Hours) {
    this.withdrawalLimit24Hours = withdrawalLimit24Hours;
    return this;
  }

   /**
   * Get withdrawalLimit24Hours
   * @return withdrawalLimit24Hours
  **/
  @Schema(description = "")
  public Double getWithdrawalLimit24Hours() {
    return withdrawalLimit24Hours;
  }

  public void setWithdrawalLimit24Hours(Double withdrawalLimit24Hours) {
    this.withdrawalLimit24Hours = withdrawalLimit24Hours;
  }

  public UserAllLimitsModel withdrawalLimit30Days(Double withdrawalLimit30Days) {
    this.withdrawalLimit30Days = withdrawalLimit30Days;
    return this;
  }

   /**
   * Get withdrawalLimit30Days
   * @return withdrawalLimit30Days
  **/
  @Schema(description = "")
  public Double getWithdrawalLimit30Days() {
    return withdrawalLimit30Days;
  }

  public void setWithdrawalLimit30Days(Double withdrawalLimit30Days) {
    this.withdrawalLimit30Days = withdrawalLimit30Days;
  }

  public UserAllLimitsModel calculate(Boolean calculate) {
    this.calculate = calculate;
    return this;
  }

   /**
   * Get calculate
   * @return calculate
  **/
  @Schema(description = "")
  public Boolean isCalculate() {
    return calculate;
  }

  public void setCalculate(Boolean calculate) {
    this.calculate = calculate;
  }

  public UserAllLimitsModel remaining24HoursDeposit(Double remaining24HoursDeposit) {
    this.remaining24HoursDeposit = remaining24HoursDeposit;
    return this;
  }

   /**
   * Get remaining24HoursDeposit
   * @return remaining24HoursDeposit
  **/
  @Schema(description = "")
  public Double getRemaining24HoursDeposit() {
    return remaining24HoursDeposit;
  }

  public void setRemaining24HoursDeposit(Double remaining24HoursDeposit) {
    this.remaining24HoursDeposit = remaining24HoursDeposit;
  }

  public UserAllLimitsModel remaining30DaysDeposit(Double remaining30DaysDeposit) {
    this.remaining30DaysDeposit = remaining30DaysDeposit;
    return this;
  }

   /**
   * Get remaining30DaysDeposit
   * @return remaining30DaysDeposit
  **/
  @Schema(description = "")
  public Double getRemaining30DaysDeposit() {
    return remaining30DaysDeposit;
  }

  public void setRemaining30DaysDeposit(Double remaining30DaysDeposit) {
    this.remaining30DaysDeposit = remaining30DaysDeposit;
  }

  public UserAllLimitsModel remaining24HoursWithdrawal(Double remaining24HoursWithdrawal) {
    this.remaining24HoursWithdrawal = remaining24HoursWithdrawal;
    return this;
  }

   /**
   * Get remaining24HoursWithdrawal
   * @return remaining24HoursWithdrawal
  **/
  @Schema(description = "")
  public Double getRemaining24HoursWithdrawal() {
    return remaining24HoursWithdrawal;
  }

  public void setRemaining24HoursWithdrawal(Double remaining24HoursWithdrawal) {
    this.remaining24HoursWithdrawal = remaining24HoursWithdrawal;
  }

  public UserAllLimitsModel remaining30DaysWithdrawal(Double remaining30DaysWithdrawal) {
    this.remaining30DaysWithdrawal = remaining30DaysWithdrawal;
    return this;
  }

   /**
   * Get remaining30DaysWithdrawal
   * @return remaining30DaysWithdrawal
  **/
  @Schema(description = "")
  public Double getRemaining30DaysWithdrawal() {
    return remaining30DaysWithdrawal;
  }

  public void setRemaining30DaysWithdrawal(Double remaining30DaysWithdrawal) {
    this.remaining30DaysWithdrawal = remaining30DaysWithdrawal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAllLimitsModel userAllLimitsModel = (UserAllLimitsModel) o;
    return Objects.equals(this.currencySymbol, userAllLimitsModel.currencySymbol) &&
        Objects.equals(this.depositLimit24Hours, userAllLimitsModel.depositLimit24Hours) &&
        Objects.equals(this.depositLimit30Days, userAllLimitsModel.depositLimit30Days) &&
        Objects.equals(this.withdrawalLimit24Hours, userAllLimitsModel.withdrawalLimit24Hours) &&
        Objects.equals(this.withdrawalLimit30Days, userAllLimitsModel.withdrawalLimit30Days) &&
        Objects.equals(this.calculate, userAllLimitsModel.calculate) &&
        Objects.equals(this.remaining24HoursDeposit, userAllLimitsModel.remaining24HoursDeposit) &&
        Objects.equals(this.remaining30DaysDeposit, userAllLimitsModel.remaining30DaysDeposit) &&
        Objects.equals(this.remaining24HoursWithdrawal, userAllLimitsModel.remaining24HoursWithdrawal) &&
        Objects.equals(this.remaining30DaysWithdrawal, userAllLimitsModel.remaining30DaysWithdrawal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencySymbol, depositLimit24Hours, depositLimit30Days, withdrawalLimit24Hours, withdrawalLimit30Days, calculate, remaining24HoursDeposit, remaining30DaysDeposit, remaining24HoursWithdrawal, remaining30DaysWithdrawal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAllLimitsModel {\n");
    
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    depositLimit24Hours: ").append(toIndentedString(depositLimit24Hours)).append("\n");
    sb.append("    depositLimit30Days: ").append(toIndentedString(depositLimit30Days)).append("\n");
    sb.append("    withdrawalLimit24Hours: ").append(toIndentedString(withdrawalLimit24Hours)).append("\n");
    sb.append("    withdrawalLimit30Days: ").append(toIndentedString(withdrawalLimit30Days)).append("\n");
    sb.append("    calculate: ").append(toIndentedString(calculate)).append("\n");
    sb.append("    remaining24HoursDeposit: ").append(toIndentedString(remaining24HoursDeposit)).append("\n");
    sb.append("    remaining30DaysDeposit: ").append(toIndentedString(remaining30DaysDeposit)).append("\n");
    sb.append("    remaining24HoursWithdrawal: ").append(toIndentedString(remaining24HoursWithdrawal)).append("\n");
    sb.append("    remaining30DaysWithdrawal: ").append(toIndentedString(remaining30DaysWithdrawal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
