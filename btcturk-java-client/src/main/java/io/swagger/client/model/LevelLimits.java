/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LevelLimitValues;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LevelLimits
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class LevelLimits {
  @SerializedName("level1Limits")
  private LevelLimitValues level1Limits = null;

  @SerializedName("level2Limits")
  private LevelLimitValues level2Limits = null;

  @SerializedName("basicVerifiedLimits")
  private LevelLimitValues basicVerifiedLimits = null;

  @SerializedName("basicLimits")
  private LevelLimitValues basicLimits = null;

  public LevelLimits level1Limits(LevelLimitValues level1Limits) {
    this.level1Limits = level1Limits;
    return this;
  }

   /**
   * Get level1Limits
   * @return level1Limits
  **/
  @Schema(description = "")
  public LevelLimitValues getLevel1Limits() {
    return level1Limits;
  }

  public void setLevel1Limits(LevelLimitValues level1Limits) {
    this.level1Limits = level1Limits;
  }

  public LevelLimits level2Limits(LevelLimitValues level2Limits) {
    this.level2Limits = level2Limits;
    return this;
  }

   /**
   * Get level2Limits
   * @return level2Limits
  **/
  @Schema(description = "")
  public LevelLimitValues getLevel2Limits() {
    return level2Limits;
  }

  public void setLevel2Limits(LevelLimitValues level2Limits) {
    this.level2Limits = level2Limits;
  }

  public LevelLimits basicVerifiedLimits(LevelLimitValues basicVerifiedLimits) {
    this.basicVerifiedLimits = basicVerifiedLimits;
    return this;
  }

   /**
   * Get basicVerifiedLimits
   * @return basicVerifiedLimits
  **/
  @Schema(description = "")
  public LevelLimitValues getBasicVerifiedLimits() {
    return basicVerifiedLimits;
  }

  public void setBasicVerifiedLimits(LevelLimitValues basicVerifiedLimits) {
    this.basicVerifiedLimits = basicVerifiedLimits;
  }

  public LevelLimits basicLimits(LevelLimitValues basicLimits) {
    this.basicLimits = basicLimits;
    return this;
  }

   /**
   * Get basicLimits
   * @return basicLimits
  **/
  @Schema(description = "")
  public LevelLimitValues getBasicLimits() {
    return basicLimits;
  }

  public void setBasicLimits(LevelLimitValues basicLimits) {
    this.basicLimits = basicLimits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LevelLimits levelLimits = (LevelLimits) o;
    return Objects.equals(this.level1Limits, levelLimits.level1Limits) &&
        Objects.equals(this.level2Limits, levelLimits.level2Limits) &&
        Objects.equals(this.basicVerifiedLimits, levelLimits.basicVerifiedLimits) &&
        Objects.equals(this.basicLimits, levelLimits.basicLimits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(level1Limits, level2Limits, basicVerifiedLimits, basicLimits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LevelLimits {\n");
    
    sb.append("    level1Limits: ").append(toIndentedString(level1Limits)).append("\n");
    sb.append("    level2Limits: ").append(toIndentedString(level2Limits)).append("\n");
    sb.append("    basicVerifiedLimits: ").append(toIndentedString(basicVerifiedLimits)).append("\n");
    sb.append("    basicLimits: ").append(toIndentedString(basicLimits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
