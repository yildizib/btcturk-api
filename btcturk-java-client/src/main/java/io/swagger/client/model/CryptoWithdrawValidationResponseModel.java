/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CryptoWithdrawValidationResponseModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-22T13:33:34.912136+03:00[Europe/Istanbul]")
public class CryptoWithdrawValidationResponseModel {
  @SerializedName("message")
  private String message = null;

  @SerializedName("asset")
  private String asset = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("fee")
  private String fee = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("date")
  private Long date = null;

  @SerializedName("precision")
  private Integer precision = null;

  @SerializedName("confirmRequired")
  private Boolean confirmRequired = null;

  public CryptoWithdrawValidationResponseModel message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public CryptoWithdrawValidationResponseModel asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @Schema(description = "")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public CryptoWithdrawValidationResponseModel address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CryptoWithdrawValidationResponseModel amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CryptoWithdrawValidationResponseModel fee(String fee) {
    this.fee = fee;
    return this;
  }

   /**
   * Get fee
   * @return fee
  **/
  @Schema(description = "")
  public String getFee() {
    return fee;
  }

  public void setFee(String fee) {
    this.fee = fee;
  }

  public CryptoWithdrawValidationResponseModel symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CryptoWithdrawValidationResponseModel date(Long date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public Long getDate() {
    return date;
  }

  public void setDate(Long date) {
    this.date = date;
  }

  public CryptoWithdrawValidationResponseModel precision(Integer precision) {
    this.precision = precision;
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @Schema(description = "")
  public Integer getPrecision() {
    return precision;
  }

  public void setPrecision(Integer precision) {
    this.precision = precision;
  }

  public CryptoWithdrawValidationResponseModel confirmRequired(Boolean confirmRequired) {
    this.confirmRequired = confirmRequired;
    return this;
  }

   /**
   * Get confirmRequired
   * @return confirmRequired
  **/
  @Schema(description = "")
  public Boolean isConfirmRequired() {
    return confirmRequired;
  }

  public void setConfirmRequired(Boolean confirmRequired) {
    this.confirmRequired = confirmRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CryptoWithdrawValidationResponseModel cryptoWithdrawValidationResponseModel = (CryptoWithdrawValidationResponseModel) o;
    return Objects.equals(this.message, cryptoWithdrawValidationResponseModel.message) &&
        Objects.equals(this.asset, cryptoWithdrawValidationResponseModel.asset) &&
        Objects.equals(this.address, cryptoWithdrawValidationResponseModel.address) &&
        Objects.equals(this.amount, cryptoWithdrawValidationResponseModel.amount) &&
        Objects.equals(this.fee, cryptoWithdrawValidationResponseModel.fee) &&
        Objects.equals(this.symbol, cryptoWithdrawValidationResponseModel.symbol) &&
        Objects.equals(this.date, cryptoWithdrawValidationResponseModel.date) &&
        Objects.equals(this.precision, cryptoWithdrawValidationResponseModel.precision) &&
        Objects.equals(this.confirmRequired, cryptoWithdrawValidationResponseModel.confirmRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, asset, address, amount, fee, symbol, date, precision, confirmRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CryptoWithdrawValidationResponseModel {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    confirmRequired: ").append(toIndentedString(confirmRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
