/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AnnouncementDetailModelIPagedList;
import io.swagger.client.model.AnnouncementModelIPagedList;
import io.swagger.client.model.NotificationShowType;
import io.swagger.client.model.SystemNotificationContentModel;
import io.swagger.client.model.SystemNotificationCountModel;
import io.swagger.client.model.SystemNotificationModelIPagedList;
import io.swagger.client.model.SystemNotificationReadModel;
import io.swagger.client.model.SystemNotificationRequestType;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for NotificationApi
 */
@Ignore
public class NotificationApiTest {

    private final NotificationApi api = new NotificationApi();

    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsAnnouncementGetTest() throws Exception {
        Integer pageIndex = null;
        Integer pageSize = null;
        NotificationShowType showType = null;
        AnnouncementModelIPagedList response = api.apiV3NotificationsAnnouncementGet(pageIndex, pageSize, showType);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsAnnouncementSlugGetTest() throws Exception {
        String slug = null;
        AnnouncementDetailModelIPagedList response = api.apiV3NotificationsAnnouncementSlugGet(slug);

        // TODO: test validations
    }
    /**
     * Notification summary.  Unread, read, total
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsCountGetTest() throws Exception {
        List<SystemNotificationCountModel> response = api.apiV3NotificationsCountGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsGetTest() throws Exception {
        Integer pageIndex = null;
        Integer pageSize = null;
        Boolean read = null;
        Long moduleId = null;
        SystemNotificationRequestType type = null;
        SystemNotificationModelIPagedList response = api.apiV3NotificationsGet(pageIndex, pageSize, read, moduleId, type);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsIdGetTest() throws Exception {
        Long ıd = null;
        SystemNotificationContentModel response = api.apiV3NotificationsIdGet(ıd);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsInitGetTest() throws Exception {
        SystemNotificationContentModel response = api.apiV3NotificationsInitGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsModulesGetTest() throws Exception {
        api.apiV3NotificationsModulesGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsReadAllPostTest() throws Exception {
        api.apiV3NotificationsReadAllPost();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsReadPostTest() throws Exception {
        SystemNotificationReadModel body = null;
        api.apiV3NotificationsReadPost(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3NotificationsUnreadGetTest() throws Exception {
        SystemNotificationCountModel response = api.apiV3NotificationsUnreadGet();

        // TODO: test validations
    }
}
