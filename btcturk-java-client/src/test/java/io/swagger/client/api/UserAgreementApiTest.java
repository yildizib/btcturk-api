/*
 * BtcTurk API 3.0
 * White label exchange API documentation.
 *
 * OpenAPI spec version: 3.0
 * Contact: development@btctrader.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CheckCurrencyRiskAgreementResponseModel;
import io.swagger.client.model.CheckPairRiskAgreementResponseModel;
import io.swagger.client.model.CurrencyTransferType;
import io.swagger.client.model.ProblemDetails;
import io.swagger.client.model.UserAgreementApproveModel;
import io.swagger.client.model.UserAgreementModel;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UserAgreementApi
 */
@Ignore
public class UserAgreementApiTest {

    private final UserAgreementApi api = new UserAgreementApi();

    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementGetTest() throws Exception {
        List<UserAgreementModel> response = api.apiV3UserAgreementGet();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementPostTest() throws Exception {
        UserAgreementApproveModel body = null;
        api.apiV3UserAgreementPost(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementRiskDisclosureCurrencySymbolGetTest() throws Exception {
        String symbol = null;
        CurrencyTransferType transferType = null;
        CheckCurrencyRiskAgreementResponseModel response = api.apiV3UserAgreementRiskDisclosureCurrencySymbolGet(symbol, transferType);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementRiskDisclosurePairPairSymbolGetTest() throws Exception {
        String pairSymbol = null;
        CheckPairRiskAgreementResponseModel response = api.apiV3UserAgreementRiskDisclosurePairPairSymbolGet(pairSymbol);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementSlugGetTest() throws Exception {
        String slug = null;
        UserAgreementModel response = api.apiV3UserAgreementSlugGet(slug);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementSlugGet_0Test() throws Exception {
        String slug = null;
        UserAgreementModel response = api.apiV3UserAgreementSlugGet_0(slug);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void apiV3UserAgreementSlugPostTest() throws Exception {
        String slug = null;
        api.apiV3UserAgreementSlugPost(slug);

        // TODO: test validations
    }
}
